{
  "id" : "lhcr1",
  "realm" : "lhcr1",
  "notBefore" : 0,
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "ec229eb1-3ddc-46d2-a11d-0ee95b3e1541",
      "name" : "uma_authorization",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "lhcr1",
      "attributes" : { }
    }, {
      "id" : "09460788-9a46-4fa1-b55f-e911e94bcea7",
      "name" : "clinical",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "lhcr1",
      "attributes" : { }
    }, {
      "id" : "2d8350cb-bb12-4ecb-8769-f121fe422f36",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "lhcr1",
      "attributes" : { }
    } ],
    "client" : {
      "testviewer" : [ ],
      "realm-management" : [ {
        "id" : "6716ec23-4077-4794-a297-86bf1251cef2",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "d1a077f4-0365-4cba-a381-ecbfe7359d03",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "8167709f-b28d-4449-b229-3ff6ae182599",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "077acf13-f5bd-4fda-86c3-f3cf4cb4d559",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "83c83948-65a6-4ad3-b9a5-9ffa515cde42",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "963a9a0b-15c9-4fcb-a7c8-eadf19cb5ace",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "impersonation", "manage-identity-providers", "query-clients", "manage-users", "create-client", "view-realm", "view-users", "manage-events", "manage-realm", "view-identity-providers", "manage-clients", "query-realms", "view-authorization", "view-clients", "manage-authorization", "view-events", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "a1e30c1f-f7ec-4668-8fb8-96b808af47a1",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "18ec749b-39de-483a-ad5e-f2ed42a04a39",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "a2da3e74-aeb6-4e07-a39e-cc3e5e71d5e8",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "19469de0-2b74-43b5-8e9c-14f126825718",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "8bdc7371-4323-410d-a2a0-97cc56a85bb8",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "e15be48f-daa2-4eee-964c-8964d7eefac2",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "4c270aa6-4057-4fca-b909-b94e30fe2959",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "13f80cc8-a9f6-41fc-99a3-4ae3bd820ded",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "c83bb4a2-53ad-49a4-842a-86a9a5764778",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "b454cee6-52f4-48c9-b5d1-7f89d08af526",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "3a43aaa0-d3c0-4bea-ae3d-40726c01c3b3",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "593aca18-1373-4650-aa7e-f71b8996fc8b",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "893ffadb-281e-4905-90a0-f97c1b8990a9",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      }, {
        "id" : "3cb74434-f0f7-4ee3-8ddf-8d2eeadc68d0",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
        "attributes" : { }
      } ],
      "lhcr2_testviewer" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "broker" : [ {
        "id" : "5e850ca7-14cb-42c4-9c19-2282c1ec1ac7",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a54d3a2c-b169-4830-a4c3-a7f80c89cb77",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "ce41b335-a0d3-4e21-a7d8-06715db6d9fc",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ad0f406d-d797-46af-9a84-ba3d9fecb5b3",
        "attributes" : { }
      }, {
        "id" : "32906af7-8a2e-4405-bfbb-a404d8215ff7",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ad0f406d-d797-46af-9a84-ba3d9fecb5b3",
        "attributes" : { }
      }, {
        "id" : "f9d0e43f-7833-4cbd-8aa5-8b4b3016b61c",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ad0f406d-d797-46af-9a84-ba3d9fecb5b3",
        "attributes" : { }
      } ],
      "kong" : [ {
        "id" : "63e31baa-bc10-4d2d-9aea-1470e37638ca",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "44b81bf9-1390-47d9-8374-fb08b6f36715",
        "attributes" : { }
      } ],
      "lhcr2_keycloak" : [ ]
    }
  },
  "groups" : [ ],
  "defaultRoles" : [ "offline_access", "uma_authorization" ],
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "3870937b-1eb3-4306-a541-a7e913a90df2",
    "createdTimestamp" : 1592767614862,
    "username" : "service-account-kong",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "kong",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ],
      "kong" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "948da0ab-2b97-4f2a-af9b-78e54e02a8af",
    "createdTimestamp" : 1592767615229,
    "username" : "service-account-realm-management",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "realm-management",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "realm-management" : [ "uma_protection" ],
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "c0922f79-c708-4e98-a546-515eff3b5b42",
    "createdTimestamp" : 1592767688479,
    "username" : "user1",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "credentials" : [ {
      "id" : "c7ce57ba-065c-4515-827f-d1959f105d78",
      "type" : "password",
      "createdDate" : 1592767700621,
      "secretData" : "{\"value\":\"sQLw3uhyya1ftVqRC6ukzK+mEvou1/RHhMAQI/brzV4U2Rc4MIUjOiKAAiZBW13tfTyXGl/fZ2Nwr+VOKAzWnQ==\",\"salt\":\"iJiF//uaMoSyq6QvIvZfYA==\"}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "uma_authorization", "clinical", "offline_access" ],
    "clientRoles" : {
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  }, {
    "clientScope" : "user/*.*",
    "roles" : [ "clinical" ]
  } ],
  "clients" : [ {
    "id" : "ad0f406d-d797-46af-9a84-ba3d9fecb5b3",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/lhcr1/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "defaultRoles" : [ "manage-account", "view-profile" ],
    "redirectUris" : [ "/realms/lhcr1/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "e271b9ed-581d-41e8-8de2-f4f4e0be9e0d",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a54d3a2c-b169-4830-a4c3-a7f80c89cb77",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "44b81bf9-1390-47d9-8374-fb08b6f36715",
    "clientId" : "kong",
    "name" : "Kong API Gateway",
    "description" : "This client is used by the Kong API gateway.",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "0efb256c-cdb9-439b-9767-c6b997a4e827",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "0b749b26-6172-4eaa-86d6-ca13ac7755e1",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2d98d698-5ec0-42c1-a748-1e960aba7481",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3580d040-3643-4e13-967c-287c8199a79f",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "user/*.*", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Default Resource",
        "type" : "urn:kong:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "f4839ea1-f979-4a87-b1ba-62b46d802a1d",
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "id" : "237d24fc-7d36-4854-988d-7f540d63fa08",
        "name" : "Default Policy",
        "description" : "A policy that grants access only for users within this realm",
        "type" : "js",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "code" : "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
        }
      }, {
        "id" : "ae749eb6-c6c1-4399-a116-f55642a8c465",
        "name" : "Default Permission",
        "description" : "A permission that applies to the default resource type",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "urn:kong:resources:default",
          "applyPolicies" : "[\"Default Policy\"]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "15f1ae63-687f-47e0-a3b2-a19033eb333c",
    "clientId" : "lhcr2_keycloak",
    "name" : "LHCR2 Keycloak",
    "description" : "This client is used by LHCR2 to authenticate to the userinfo endpoint and validate tokens for exchange",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "fdfb428e-6415-4073-8bc8-32a1a2061067",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "fa3cb328-52c8-46bd-baa8-636afead7575",
    "clientId" : "lhcr2_testviewer",
    "description" : "Used by the lhcr2 test viewer to exchange a token",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "a4d8acc4-48ba-46fe-a46a-99a7bf6bb8fe",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "user/*.*", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "4c4f5ce6-35eb-42a8-840c-d8d278167ab9",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "af20d005-360d-4685-bbe1-3e573ceff6a5",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b8f21b6c-5363-4291-a096-b2500305c958",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6a6a7793-4db5-42b0-a4ae-8aa1257ff981",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "idp.resource.1f0e52a9-a962-43f8-a90e-ab9713ab117b",
        "type" : "IdentityProvider",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "202551be-5048-49d1-a046-3d5582c3c9a3",
        "uris" : [ ],
        "scopes" : [ {
          "name" : "token-exchange"
        } ]
      } ],
      "policies" : [ {
        "id" : "f938b718-cbd9-4a05-b122-2977165dec27",
        "name" : "Token Exchange",
        "type" : "client",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "clients" : "[\"lhcr2_testviewer\"]"
        }
      }, {
        "id" : "906bea2e-7ab9-4125-b583-a2e580db1fe9",
        "name" : "token-exchange.permission.idp.1f0e52a9-a962-43f8-a90e-ab9713ab117b",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"idp.resource.1f0e52a9-a962-43f8-a90e-ab9713ab117b\"]",
          "scopes" : "[\"token-exchange\"]",
          "applyPolicies" : "[\"Token Exchange\"]"
        }
      } ],
      "scopes" : [ {
        "id" : "1e02cb50-feb5-42fe-865e-d904d8e75912",
        "name" : "token-exchange"
      }, {
        "id" : "a987e228-57c3-42bd-8dd7-7f2899c7b194",
        "name" : "manage"
      }, {
        "id" : "ba9ca97d-7184-4930-913a-559dc805b5e4",
        "name" : "view"
      }, {
        "id" : "777bf70e-3c2f-4fb6-abf9-879c880a8f8c",
        "name" : "manage-members"
      }, {
        "id" : "9ba3e9e7-ee16-4726-bebd-a986083908ae",
        "name" : "view-members"
      }, {
        "id" : "ddc7594c-4564-4ebb-9763-d75bda12bda9",
        "name" : "manage-membership"
      }, {
        "id" : "a783b0bd-d49a-4f50-bc18-44e8dac10caf",
        "name" : "map-role"
      }, {
        "id" : "b6e2228e-7312-4294-9ad6-c73f0ab412c1",
        "name" : "map-role-client-scope"
      }, {
        "id" : "fe5368a0-fe72-44d1-a8af-74c5364abd97",
        "name" : "map-role-composite"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "13d7534f-05ec-4800-86db-43aec500e22d",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/lhcr1/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "/admin/lhcr1/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "2e49513c-9a85-4473-9047-d8a73276a070",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "b33b522e-9c5e-4d62-a7a7-feb74608d43a",
    "clientId" : "testviewer",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "85ac8b3e-df3c-4e4f-be65-ca5e5b68d3dc",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "user/*.*", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "b3840a41-e580-4032-93c2-b1d3a98e44f3",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "3379aa32-ec5d-4c3d-b428-c48969ccaf5e",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "d8b6a3bd-491f-4940-b82b-44be4b0d15ed",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "1c33d547-a251-403c-9c47-44b13a0eb7b8",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7bc4abf3-5ad8-4fce-b940-82f155078f0e",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "42863b1d-7f0b-4bd9-84e5-eb4b2b13137f",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "6301faa3-e52c-4605-b8c8-ea14b5a45bf5",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a6be8f8f-c391-4a44-ba40-8fec7b9a0170",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e28b7dfe-305c-420c-b4ee-10f4dc634dd1",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "baebe4ee-d2b2-4135-8c42-68dc196fcf8d",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "0758f748-26e4-4e64-8736-fa269468add8",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "92bb641d-e2a6-476f-83a0-b67f556a9c38",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "679fb956-d33e-4667-af43-1ee750a2bfc8",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "39bbfa83-a010-4473-a73b-c6dcc63cee7a",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3cb69a07-eb30-4633-af81-db641ab7b653",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "065419b8-fb1c-45fe-af4f-66d652124a4c",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e4178c79-1ed4-48f2-a202-34021e0f5737",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a6df6498-259b-43e6-a408-f4a0099282e9",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ee3d9976-33d9-47f7-a246-d56b77fb9177",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7fdbfd2a-f2b9-4965-876f-ef4c09e87206",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "d26dd22b-3be8-41f0-9531-81602eae8d2c",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "889a0041-203e-4fb5-8844-f50bc0df681c",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "98c88039-5ccb-4d4f-ab46-13f906efd8d6",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "523eb151-61ee-4220-ae9d-8f9ed91757cb",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "57abaa42-3283-4d45-acb5-49abf9b626b3",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "532ab05a-0324-4965-a4af-a2338ef111ed",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "aacf2406-a8ce-496b-b53a-f2b99be07af7",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1fbfd4ad-c45f-4cce-a9af-d21132c6a6ea",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "78c309cb-3a9c-4981-a5cb-95442e9747b7",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "9ec2b800-c15b-4f5e-bc80-69aa1f5098cf",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "17648ae2-a516-49fd-8c31-5529cb609dc3",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "5378906f-207e-42a6-9606-b8cbeec01c6b",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "ebbcc423-5771-482f-a29d-34fd9c3336e5",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "d6c9ae0b-b044-40bb-837a-d10dac04eb96",
    "name" : "user/*.*",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "cbc24832-b0fe-4e0c-98f9-7f167c693419",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "dd42705c-27b2-45a6-bb20-18d63e056d17",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "roles", "web-origins", "email" ],
  "defaultOptionalClientScopes" : [ "microprofile-jwt", "address", "phone", "offline_access" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ {
    "alias" : "lhcr2oidc",
    "internalId" : "1f0e52a9-a962-43f8-a90e-ab9713ab117b",
    "providerId" : "oidc",
    "enabled" : true,
    "updateProfileFirstLoginMode" : "on",
    "trustEmail" : false,
    "storeToken" : false,
    "addReadTokenRoleOnCreate" : false,
    "authenticateByDefault" : false,
    "linkOnly" : true,
    "firstBrokerLoginFlowAlias" : "first broker login",
    "config" : {
      "hideOnLoginPage" : "",
      "userInfoUrl" : "http://lhcr2:8082/auth/realms/lhcr2/protocol/openid-connect/userinfo",
      "validateSignature" : "",
      "acceptsPromptNoneForwardFromClient" : "",
      "clientId" : "lhcr1_keycloak",
      "tokenUrl" : "http://lhcr2:8082/auth/realms/lhcr2/protocol/openid-connect/token",
      "uiLocales" : "",
      "backchannelSupported" : "",
      "useJwksUrl" : "true",
      "loginHint" : "",
      "authorizationUrl" : "http://lhcr2:8082/auth/realms/lhcr2/protocol/openid-connect/auth",
      "clientAuthMethod" : "client_secret_post",
      "disableUserInfo" : "",
      "clientSecret" : "**********"
    }
  } ],
  "identityProviderMappers" : [ {
    "id" : "d1578c78-c22b-4d7b-aee5-726511a10b6e",
    "name" : "Hard Map Clinical Role",
    "identityProviderAlias" : "lhcr2oidc",
    "identityProviderMapper" : "oidc-hardcoded-role-idp-mapper",
    "config" : {
      "role" : "clinical"
    }
  }, {
    "id" : "2a53eb9a-7635-430b-a7e3-1bd5eb5702b9",
    "name" : "Name Mapper",
    "identityProviderAlias" : "lhcr2oidc",
    "identityProviderMapper" : "oidc-username-idp-mapper",
    "config" : {
      "template" : "${ALIAS}.${CLAIM.sub}"
    }
  } ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "2ccce094-4448-41d8-882e-7b05fc78b5d3",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "fe499465-611f-4622-9632-e07c547b0687",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "46f9013e-7429-4ebd-a024-1e815b967262",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "1f51aa47-5139-44e5-a5b6-f8e65dc7e211",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "58c6445b-380a-47a3-a3cb-64b9ca6fa624",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "8a5d81e8-1ac3-482e-9b06-f5b003dbe75c",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "0e40c34f-0fac-41d7-a4cf-82d7ed8aa3ae",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "a5308b22-a2b7-4d9a-a684-d1fc9913624f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-address-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "a8ac1170-6d8f-4fe8-9a4d-ec030dc97d13",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEA00MSj1xF4P+QICYLqB9bfvjqB5o/xutep4wcRsNlASLVvpp1SynwAEbd8gmCFV7rBgXKM7E0BxeCogaUqAWgKSQidvuYsZbOYttM4eIWmWTqsprUIqqvtlbqrEXdPzHNAtS6eYoQnkvm/UAIfozsqumCzCG9D9+TIg0AShhEfwZTOpCVNLRehYEFXxkBKnrW4HT+y0lKIEYfasQPiIAwi0DZFkt+LDIAmgIjDzP+tx9kL06oYZ+o0xxjFCbaXQpkgd/6C1xlt/OE9JYN9WsTO9lXmgOBAoYuegIPUuXCTIY89Znr18hA38Bq64uUz9BXgynbQ/r42JnyXw8AkfOCWwIDAQABAoIBAC38ubuPQH7b4sm8vmjYephHItqIzz1D2xTpwPX+bqwyowicos+7z0ygIIwhWbnBMbPb6soZ1tN8YKlYeV+h6d1Kyl3QIsr1ovON/UxmZLj7aMN8RJVPRnSQswDRLHonIxNsrzLpxPhQWXXjTHYPwyzpK9m3tmoQJv0Qi3GVmsNzfZ8F0925X+SLh3v4w2r6ND2YVBucDH3xDIXB2hGaGpGf71j6wvGDTd5umShbtqHsMxlhsVH7LeqcuPOYNI2d9RJoNQ2tdGiN9Of55SdBjD0EQE0z9tDYrwxizoL8BoKJT3EazU5vYAD7Csm6qeMSyPNt/LwTWV0k5Iqwy3aEuHECgYEA9eLLEKK5KxyfxkGQgIdM4M4tAVlPRCqz7GdQUlJYyPY2Ru3ns9FXsBbpgpfribsGrRx71P5d27XCfhhhspY4UA2QZoNrDSDkW1gYkGyR4OGPzWtWu5DwQ3cNrtRei6Yo/FKocdeqOffd7JVWDNUPU4xT3Tid9EFqzUnQXBPFNBUCgYEA2/OvgGpD4k0BC0zCZzt3MJxft+R2IKAXKWFwp934YuKyewdMNmCgZl+hA67um5KQ/50gqFN+GPP1hO/6ROwQlkvN8/ffgeYU17+clhkly0SQuI+3JJuxaUmfqVqOptSX3EgsnXkWsphMg+vzNtaHhSBzb9Ak5ZK6sGCyRp5DSK8CgYEAxjQWtEY3NQVR1aIsNS7bTatko922A6DYgAuXt4QhhXzSq8JCL7TkFlGh0V9cwh08eHapazvPtLeDG9nThv2ITx9f8wKkXGTTLr6IroKV5Mxt+ow30eI3imqBYRhXTgKWry6CEaJi2W9wOLD4OEfWnuZTA9QLn0TMLsb9afuVzzECgYAI7x8D0k0rlgEi2l1TICE5QkDJEWiS7q3CKokO6H88VQT25lb8JnSdc+jwY1yhyRRGrbUz4SBQFyiz26OIxSXvVOjqrfjQJ+5UzR2pIyBb308ZkAzaWdCc/DaWBG2i7SO1+OCHDPIVEwaYnS7l3VTn3WeS9Rtqj8kxfNwA7lDBVQKBgCxSMLJEp+CbuVvKejVebnaRwUQng86+Kd+21lFmukOt4Fcg1G8ZIV5FWGtalver+WxLG7gdVRiphbfsyZxjCYQTuq0EiuS86ueQ9Eb7TgHqnnM9CPxqE4pZPZvn5rSA++V0+6ZpKZsVyil9WSrbARHBMEgM9s3tBS1xeQQBodQo" ],
        "certificate" : [ "MIICmTCCAYECBgFy2FkNmDANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVsaGNyMTAeFw0yMDA2MjExOTI1MTRaFw0zMDA2MjExOTI2NTRaMBAxDjAMBgNVBAMMBWxoY3IxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA00MSj1xF4P+QICYLqB9bfvjqB5o/xutep4wcRsNlASLVvpp1SynwAEbd8gmCFV7rBgXKM7E0BxeCogaUqAWgKSQidvuYsZbOYttM4eIWmWTqsprUIqqvtlbqrEXdPzHNAtS6eYoQnkvm/UAIfozsqumCzCG9D9+TIg0AShhEfwZTOpCVNLRehYEFXxkBKnrW4HT+y0lKIEYfasQPiIAwi0DZFkt+LDIAmgIjDzP+tx9kL06oYZ+o0xxjFCbaXQpkgd/6C1xlt/OE9JYN9WsTO9lXmgOBAoYuegIPUuXCTIY89Znr18hA38Bq64uUz9BXgynbQ/r42JnyXw8AkfOCWwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQALF1YitAM+DdQrRXWyinAu3LbCrayxiezW+Z5FLf34UIEIIkMbDT2vYscFvRaxhxox+KltYp+njagoFG9u+VjJbpCHarTWKzgdwo3XM4DBFaDSjQDuRI0qwZSZ9udphqs59DwNywfu9QIpUKBYJsfcptMGQyz7lQfZNvHmajlizkcbtCiOZEw+DIHvOWvJKhaWNLvHnQxTAYAGmIgDyDGpclhHyuQLJzSQwcXXfH+Ob2mFX6MoK9UuclkgqR2jNwXOiFyLEU4f7aPMRa8SeC4bLAZgQfObmjkEh1qz+sPL0OR2OXZE6YmHQ6xDaVwVatD6zMhq8lxp3Qtfx+0/p6cI" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "22b68b25-d15b-485e-9c41-fbd0c3ed6435",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "bfe6c84e-d708-400c-a2e2-65dd130f41f8" ],
        "secret" : [ "-Rx18vxsbvjB1M5s311eyPl2k2yrUk2a-V0M4oEIhM8Sgue8u8tB8k_Cw_N4f2GdkgoghIY26K0eN10PzxwNOQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "16f3610e-aef1-4329-9820-1d4ac7f5fdf1",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "ca7cd0c9-b917-4553-b6ba-c6383112e16a" ],
        "secret" : [ "GaoZiL6nYbjYAUBjbE_0lQ" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "473a32e6-28a1-4f9f-a465-caec0e210e9d",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "6c51b349-7445-4715-9c05-fa1597a2612a",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "requirement" : "DISABLED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "53f789cf-c47d-4d85-ae2d-73c38d4543bb",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "6fa57385-0d4b-4b9d-9c6c-d1e84d31a6b8",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "023004e1-6c9b-4a1f-8aed-fb5536878136",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "b1bed31b-025d-4c3c-8dd0-5475336f6167",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "bc54cda3-5b10-4ec7-83ad-4aedb249e58a",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "7836b1f9-921a-4a8a-9f88-f1006fb62c0c",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "f0fe1fe9-57cd-4c87-95ae-42c1c542d9c6",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "970cfc1b-2692-4e3e-a99e-a1f4c7a112fc",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "0e0770d2-0170-4649-98de-03f23bf2b316",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-x509",
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "312479d8-48b9-46ef-a58e-11b4d0eadc8f",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "4ce04910-2a82-4646-800a-d6329c09e173",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "bbe4ab99-2611-4c38-950b-e3d67eb6be37",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "f152eead-63ef-47e6-981d-9aebeb0f4a61",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "5bd37c7f-8e39-46f4-a851-1bec22467820",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "141ee74a-b49d-40f6-bd6b-b7951551f59a",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "0a0ec570-c162-4a22-abe5-8629c9cacfa5",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "b0088725-f355-4ffb-b6ed-7ab1f4556311",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "da97c7b9-7b99-4f84-bb78-56e802cef79e",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "5e4adeb6-4937-4ac8-8e6a-43bcb6b3ca3f",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "9bce17e5-85fa-42a2-907f-f8895a346765",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "webAuthnPolicyAuthenticatorAttachment" : "not specified",
    "_browser_header.xRobotsTag" : "none",
    "webAuthnPolicyRpEntityName" : "keycloak",
    "failureFactor" : "30",
    "actionTokenGeneratedByUserLifespan" : "300",
    "maxDeltaTimeSeconds" : "43200",
    "webAuthnPolicySignatureAlgorithms" : "ES256",
    "offlineSessionMaxLifespan" : "5184000",
    "_browser_header.contentSecurityPolicyReportOnly" : "",
    "bruteForceProtected" : "false",
    "_browser_header.contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.xXSSProtection" : "1; mode=block",
    "_browser_header.xFrameOptions" : "SAMEORIGIN",
    "_browser_header.strictTransportSecurity" : "max-age=31536000; includeSubDomains",
    "webAuthnPolicyUserVerificationRequirement" : "not specified",
    "permanentLockout" : "false",
    "quickLoginCheckMilliSeconds" : "1000",
    "webAuthnPolicyCreateTimeout" : "0",
    "webAuthnPolicyRequireResidentKey" : "not specified",
    "webAuthnPolicyRpId" : "",
    "webAuthnPolicyAttestationConveyancePreference" : "not specified",
    "maxFailureWaitSeconds" : "900",
    "minimumQuickLoginWaitSeconds" : "60",
    "webAuthnPolicyAvoidSameAuthenticatorRegister" : "false",
    "_browser_header.xContentTypeOptions" : "nosniff",
    "actionTokenGeneratedByAdminLifespan" : "43200",
    "waitIncrementSeconds" : "60",
    "offlineSessionMaxLifespanEnabled" : "false"
  },
  "keycloakVersion" : "8.0.1",
  "userManagedAccessAllowed" : false
}